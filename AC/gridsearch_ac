import itertools
import pickle
from multiprocessing import Pool
from tqdm import tqdm

from utils_AC import train, test

params = {
    'lra': [3e-4, 1e-3],
    'lrc': [3e-4, 1e-3],
    #'batch_size': [32, 64],
    #'use_entropy': [True, False]
}

MULTIPLE_STARTS = 4

def pool_tt(args: dict):
    agent = train(**args)
    return test(agent)

def main():
    results = []

    keys = list(params.keys())
    for p in tqdm(itertools.product(*params.values())):
        kw = dict(zip(keys, p))
        pool = Pool(processes=MULTIPLE_STARTS)
        scores = pool.map(pool_tt, [kw] * MULTIPLE_STARTS)
        score = sum(scores) / len(scores)
        results.append([score, kw])

    print(max(results))

    with open('log_pickle', 'wb') as outfile:
        pickle.dump(results, outfile)

if __name__ == '__main__':
    main()
